{"version":3,"file":"static/js/10.8e0f5f0d.chunk.js","mappings":"gPAsDA,EAhDyB,WAAO,IAAD,EAC3B,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,ECFmB,WACzB,OAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAuBH,GAASI,KAAKL,KACtC,CAACC,IAEGF,EDNOO,GACNL,GAAYC,EAAAA,EAAAA,MAAZD,QACFM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,QAAQC,IAAI,WAAYf,IAExBM,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAuBH,GAASI,KAAKP,KACtC,CAACG,KAGA,4BACI,mBAAQY,QAAS,0BAAMN,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAAzD,sBACA,6BACKhB,IACG,iCACI,wBAAKA,EAAMiB,kBACX,uCAAejB,EAAMkB,iBAErB,sCACA,uBAAIlB,EAAMmB,YACV,mCANJ,UAOKnB,EAAMoB,cAPX,aAOK,EAAcC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACtB,OACI,0BACI,uBAAIA,KADED,YAQ9B,4BACI,qDACA,SAAC,KAAD,CAAME,GAAE,OAAR,kBAFJ,KAEkC,mBAC9B,SAAC,KAAD,CAAMA,GAAE,UAAR,sBACA,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,c,kOE9CdC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAA,sCAAyCF,IAD7D,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuB/B,GAAvB,uFACoB2B,IAAAA,IAAA,iBAAoB3B,EAApB,4BAA+CyB,EAA/C,oBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BhC,GAA1B,uFACoB2B,IAAAA,IAAA,iBAAoB3B,EAApB,4BAA+CyB,EAA/C,oBADpB,cACGG,EADH,OAEHlB,QAAQC,IAAI,eAAgBiB,EAASC,KAAKC,SAFvC,kBAGIF,EAASC,KAAKC,SAHlB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BjC,GAA5B,uFACoB2B,IAAAA,IAAA,iBAAoB3B,EAApB,oBAAuCyB,EAAvC,oBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBR,IAAAA,IAAA,+BAAkCQ,EAAlC,oBAAyDV,IAD7E,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpC,GAA/B,uFACoB2B,IAAAA,IAAA,iBAAoB3B,EAApB,oBAAuCyB,IAD3D,cACGG,EADH,yBAEIA,GAFJ,kEA7BPD,IAAAA,SAAAA,QAAyB","sources":["components/Views/MovieDetailsPage/MovieDetailsPage.js","Hooks/useFetchMovie.js","services/movie-api.js"],"sourcesContent":["import { useFetchMovie } from \"Hooks/useFetchMovie\";\nimport { Suspense, useEffect, useState } from \"react\";\n// import { Link, Outlet, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { Link, Outlet, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport * as moviesApi from \"../../../services/movie-api\";\n\nconst MovieDetailsPage = () => {\n    const [movies, setMovies] = useState([]);\n\n    const movie = useFetchMovie();\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    console.log('movies: ', movies)\n\n    useEffect(() => {\n        moviesApi.getMovieById(movieId).then(setMovies)\n    }, [movieId]);\n\n    return (\n        <div>\n            <button onClick={() => navigate(location?.state?.from ?? '/')}>Go Back</button>\n            <section>\n                {movie && (\n                    <>\n                        <h2>{movie.original_title}</h2>\n                        <p>User score {movie.vote_average}</p>\n                        {/* <img src={movie.poster_path} alt={movie.original_title}></img> */}\n                        <h3>Overview</h3>\n                        <p>{movie.overview}</p>\n                        <h3>Genres</h3>\n                        {movie.genres?.map(({ id, name }) => {\n                            return (\n                                <div key={id}>\n                                    <p>{name}</p>\n                                </div>\n                            )\n                        })}\n                    </>\n                )}\n            </section>\n            <nav>\n                <div>Additional information</div>\n                <Link to={`cast`}>Cast</Link> <br />\n                <Link to={`reviews`}>Reviews</Link>\n                <Suspense fallback={<div>Loading subpage...</div>}>\n                    <Outlet />\n                </Suspense>\n            </nav>\n        </div>\n    )\n}\n\nexport default MovieDetailsPage;","\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport * as moviesApi from \"../services/movie-api\"\n\n\nexport const useFetchMovie = () => {\n    const [movie, setMovie] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        moviesApi.getMovieById(movieId).then(setMovie);\n    }, [movieId]);\n\n    return movie;\n};","import axios from \"axios\";\nconst KEY = '171aaca622cd75e6df5a814c1d33ccb1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n}\n\nexport async function getCast(movieId) {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data;\n}\n\nexport async function getReviews(movieId) {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    console.log('getReviews: ', response.data.results)\n    return response.data.results;\n}\n\n\nexport async function getMovieById(movieId) {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response.data;\n}\n\nexport async function searchMovies(searchQuery) {\n    const response = await axios.get(`/search/movie?&query=${searchQuery}&api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n    return response;\n}"],"names":["useState","movies","setMovies","movie","setMovie","movieId","useParams","useEffect","moviesApi","then","useFetchMovie","navigate","useNavigate","location","useLocation","console","log","onClick","state","from","original_title","vote_average","overview","genres","map","id","name","to","Suspense","fallback","KEY","getTrending","axios","response","data","results","getCast","getReviews","getMovieById","searchMovies","searchQuery","getMovieDetails"],"sourceRoot":""}